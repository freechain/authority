// Generated by LiveScript 1.5.0
(function(){
  var requireLs, addresses, registryAbi, ref$, map, pairsToObj, getContractInstance, registryContract, topupBuilder, out$ = typeof exports != 'undefined' && exports || this;
  requireLs = require('require-ls');
  addresses = require('./blockchain/.out/addresses.json');
  registryAbi = require('./blockchain/.out/NameRegistry.abi.json');
  ref$ = require('prelude-ls'), map = ref$.map, pairsToObj = ref$.pairsToObj;
  getContractInstance = function(abi, addr){
    return function(web3){
      var Contract;
      Contract = web3.eth.contract(abi);
      return Contract.at(addr);
    };
  };
  out$.registryContract = registryContract = getContractInstance(registryAbi, addresses.NameRegistry);
  out$.topupBuilder = topupBuilder = function(web3){
    return function(amount, cb){
      var transaction;
      transaction = {
        to: addresses.NameRegistry,
        value: web3.toWei(amount, 'ether').toString()
      };
      return web3.eth.sendTransaction(transaction, function(err, data){
        return cb(err, data);
      });
    };
  };
  module.exports = function(web3){
    var topup, contract;
    topup = topupBuilder(web3);
    contract = registryContract(web3);
    return import$({
      topup: topup
    }, contract);
  };
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
